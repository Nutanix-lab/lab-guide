[
{
	"uri": "/03-nucalm-middle/01-helloworld/",
	"title": "HelloWorld蓝图",
	"tags": [],
	"description": "创建一个最简单的蓝图",
	"content": "这个lab的目标：\n 蓝图使用上面的CentOS7的模板镜像 在创建工作流里生成一个包含Hello World字符串的文件/helloworld.txt 这个蓝图可以生成自定义配置的n台虚拟机 运行这个蓝图生成3个虚拟机 使用Stop工作流，poweroff这三个虚拟机 使用Start工作流，poweron这三个虚拟机 使用Delete工作流删除这三个虚拟机实例  操作步骤如下。\n点击左侧的第二个蓝图按钮，点击 创建应用蓝图 按钮。 选择这个蓝图部署的项目名称，点击处理按钮。 点击配置按钮，填写应用配置信息。 填写蓝图名称和描述。 点击Credentials按钮，输入一个root用户信息，用于登录自动化生成的虚拟机，例如 root / nutnaix/4u , 输入完密码后再空白处点击一下，在点击密码框中右侧的眼睛按钮，确认保存的密码。点击 back按钮。 点击 Save 按钮保存当前的配置，其实也是检查当前配置信息的正确性，否则保存不会成功。 点击右下角的Create按钮，配置创建工作流，输入如图所示的信息。选择的 Image 模板名称是上个步骤里生成的模板。\n选择该蓝图的这个服务VM的配置信息，包括用于ssh登录的账户信息。 点击 save 按钮保存蓝图配置，点击Launch按钮，部署这个蓝图。 输入此次应用部署的名称，点击 create 按钮。 观察当前这个蓝图部署的状态。 点击 Manager ，点击 Create 创建工作流右侧的眼睛按钮，查看当前自动化工作流执行的进度和状态。 全部都是绿色表示一切正常。 在PC的虚拟机查看控制台刚才的部署生成的vm和它的状态。 SSH登录到这个虚拟机，运行下面的命令查看目标的文件是否部署成功。\n[root@localhost ~]# ls / bin etc lib mnt root srv usr boot helloworld.txt lib64 opt run sys var dev home media proc sbin tmp [root@localhost ~]# cat /helloworld.txt hello world [root@localhost ~]#  以上步骤的验收标准： 可以登录用户蓝图生成的vm，能看到目标的文件。 "
},
{
	"uri": "/02-nucalm-basic/01-configure-calm/",
	"title": "初始化配置Calm",
	"tags": [],
	"description": "Calm环境的基础配置",
	"content": " AWS账户的配置 由于Calm是多云管理，因此很多已经在Nutanix商店里的蓝图都支持AWS的部署，下面需要配置一个假的AWS账户信息，这样在使用预定义蓝图的时候减少提示信息出现的机会。\nApp页面里，左侧齿轮图标，进入AWS账户配置页面，点击 Add Setting 按钮。\n在这个页面中输入任一的 Access Key ID 和 Secret Access Key 字符串。保证点击Save后正确地保存了一条记录即可。 配置Calm项目 点击左侧最下面的图标，进入项目配置页面，点击 Create Project 按钮。\n输入该项目的相关信息：\n 项目名称：可以是一个应用开发团队，或者一个业务应用一个项目 用户和角色信息：下图设置 ssp_user 组里的所有人的角色是 Developer，可以设置其他的AD用户为其它各种的Role 选中 Local and Cloud Resource 选这个项目默认使用的AHV cluster，选中该项目所能使用的网络 输入该项目的资源配额 选中刚才输入的AWS账户  点击 Save 按钮之后，选中页面中的 环境 那个标签\n在这个页面的连个标签页面中输入必要的信息，这里需要配置一个root账户信息，可以是用户名密码的，用在Calm登录虚拟机的时候。\n以上步骤的验收标准： 使用PC的默认用户名和密码成功登陆新安装的PC。 "
},
{
	"uri": "/00-getting-start/",
	"title": "基本配置",
	"tags": [],
	"description": "Nutnaix Calm相关的基础配置",
	"content": " 环境需求 下载并安装最新版本的 Nutanix产品 。本站所使用的系统环境版本如下：\n NCC:3.50 Nutanix AHV: 20170830.58 Prism Central: 5.5   安装AHV群集 AHV群集产品安装说明和指导\n 配置和部署AD 最基本的配置\n "
},
{
	"uri": "/00-getting-start/installation/",
	"title": "安装AHV群集",
	"tags": [],
	"description": "AHV群集产品安装说明和指导",
	"content": "AHV 20170830.58 需要最小的版本，这个版本是Nutnaix Calm内置于PC中的起始版本。 安装配置好AHV Cluster，配置好两个服务IP，如下图所示。\n如果以上的数据服务IP不设置，在将AHV群集注册到PC里的时候会报错，而无法完成注册。\n以上步骤的验收标准： 能使用AHV群集默认的初始化密码登陆PE。 "
},
{
	"uri": "/03-nucalm-middle/02-3layer/",
	"title": "三层LAMP应用蓝图",
	"tags": [],
	"description": "基于LAMP技术堆栈的典型三层应用",
	"content": "本Lab的目标： * 使用一个下载的别人开发的蓝图 * 导入在自己的项目中 * 在本地项目的蓝图编辑器里修改成一个可以正常运行的蓝图 * 使用当前项目的配额测试和部署这个蓝图的应用 * 使用和测试蓝图中所定义的自动化运维流程 * 修改和增加自定义的应用服务自动化维护场景（可选）\n蓝图的下载地址：http://lab.digitalformula.net/calm-lab-3.0/blueprints/2017.12.06.LAMP.RC6.json.zip\n下载后解压缩得到蓝图的 json 文件。\n在App页面中点击左侧的第二个按钮，进入蓝图管理，点击 Upload Blueprint 按钮，通过上传的方式新建一个蓝图。点击后选择刚才下载的json蓝图文件。\n输入这个蓝图在本地的名称和部署的项目。点击 上传 按钮。 上传之后进入该蓝图的编辑模式，可以点击图中的红色感叹号，了解当前蓝图里必须修改的配置点。然后逐一检查和确认每一项配置，保证所有配置和当前的项目和资源池匹配。\n点击 Credentials 按钮，将密码更新为上述步骤中创建的模板机的root口令， Credentials name最好保持不变。点击空白处和密码查看的眼睛图标，确认密码应保存住了，点击 back 按钮。\n依次点击左下角Service清单中的三项服务，修改每项服务中的详细配置，如下图所示。 确保使用正确的登录密码信息。 点击保存按钮，确认整个蓝图的配置信息都是正确的，点击 Lunch 按钮部署这个蓝图。 输入这次蓝图部署的名称，点击Create按钮，创建这个部署。 在应用部署界面中观察 Create 工作流的执行状态。 在虚拟机控制台里观察虚拟机创建的状态和结果。 部署完毕之后可以范围 负载均衡 服务状态查看地址： http://10.21.11.55:8080/stats\n如果右下方的两个服务的状态都是UP的话，这表明整套服务部署成功了。然后访问 http://haproxy_vm_ip/ 浏览应用服务页面。\n以上步骤的验收标准： 可以登录用户蓝图生成的vm，能看到三层应用的Web界面。 "
},
{
	"uri": "/02-nucalm-basic/02-deploy-bp/",
	"title": "导入Nutanix Calm商店里的蓝图",
	"tags": [],
	"description": "Calm里应用商店的初始化配置",
	"content": "Nutanix Calm商店是在公网上的，点击左侧的图标，如果当前的这个Cluster可以上互联网就可以看到如图所示的应用清单，这些是Nutanix已经测试打包好的应用蓝图。\n选择若干种应用蓝图，选中那些项目需要使用这个蓝图，点击 Apply 之后，点击 Publish按钮，这样这个蓝图就下载并且导入到了本地的Calm应用商店里。\n下图是导入完之后的结果，点击左侧最上面的按钮后，可以看到本地应用商店的状态。 以上步骤的验收标准： 本地的应用商店里获取到了可以部署的应用蓝图，这些蓝图是成功地从互联网上下载到本地。 "
},
{
	"uri": "/00-getting-start/configuration/",
	"title": "配置和部署AD",
	"tags": [],
	"description": "最基本的配置",
	"content": "AD或者LDAP服务器是配置PC的必备的服务，在使用PC提供的自助服务门户的时候，需要使用AD作为用户认证的来源。\n工作内容包括：\n 建立SSP（自助服务）所需要的组和用户 建立管理员组：ssp_admin 建立用户组： ssp_user 在这两个组里建立若干个测试用户，用于测试SSP中的不同角色。  以上工作内容贯彻了下面文档的所有步骤，作为一次WorkShop中的完整的配置。如果你使用已有的AD服务器，请参考以上配置，并不需要建立以上的用户和组。\n 建立的组如下图所示：\n用户和组建立完成之后的结果如下图所示：\n以上步骤的验收标准： 记录新建/已有测试账户的用户名和密码，每一个账户都可以成功地登陆AD域。 "
},
{
	"uri": "/03-nucalm-middle/03-ec2-demo/",
	"title": "模拟AWS EC2蓝图",
	"tags": [],
	"description": "创建一个模拟AWS EC2服务的蓝图",
	"content": " 这个lab的目标：\n 蓝图使用上面的CentOS7的模板镜像 创建模仿AWS EC2虚拟机服务的蓝图 建立两种规格的虚拟机 可以设置虚拟机的其它各种参数  参考蓝图 可以在GitHub下载本文示例蓝图文件，网址：https://github.com/Nutanix-lab/calm。 下面是这个蓝图的关键配置讲解。\n应用基础配置 - Application Profile 在变量清单这里增加一个vm_hostname变量，设置初始值为vmhostname\nEC2服务配置 - 规格参数  配置VM Name，设置两个变量组成的虚拟机名称，用于在Prism里查询 配置 martin-centos-t1 为初始化的默认镜像，点亮右侧的小人，这样就可以使蓝图的使用者在运行这个蓝图的时候，选择这个参数的值，而不是预想定死的   添加一块数据盘，初始8GB，用户可变更 配置默认网络为vlan128，用户可变更（右侧小蓝人已经被点亮）  EC2服务配置 - 软件包安装  基于martin-centos-t1模板的预装软件包，如果有其它扩展安装和配置的可以把命令写在这里 这里使用了一个修改虚拟机主机名的操作  EC2服务配置 - 虚拟机副本数量  默认配置为1，用户运行时可变  测试EC2蓝图 在蓝图编辑器里点击右上角的Launch按钮。\n 配置这次部署的应用名称 修改vm_hostname的名称为 xyz-bank 点击VM Configuration下面的EC2，在里面可以看到所有运行时可以变更的参数，找到参数：number of replicas ；修改默认的1位3； 点击右下角的 Create 按钮  观察测试结果 进入Application，点击右侧第三个图标；点击Manager，点击Create的右侧的眼睛的按钮。查看整个部署的过程。点击 Services Tab；观察已经创建的三个虚拟机的IP地址。\n进入Explore-\u0026gt; VM 在搜索栏输入 xyz 按回车，应该能看到以下三个虚拟机；\n点击其中的一个vm\n点击这个vm上面的console\n在控制台中登入操作系统，运行 hostname 命令，确认是否是预想的主机名。\n删除这次部署 回到Nutanix Calm界面，点击右侧的第三个按钮。选中目标要删除的应用部署，选中菜单中的 Delete 命令。\n以上步骤的验收标准： 以上新建的三个虚拟机被删除，无法搜索出来。 "
},
{
	"uri": "/02-nucalm-basic/03-config-cat/",
	"title": "配置服务目录",
	"tags": [],
	"description": "在自助服务的门户里，可以选择ISO和磁盘镜像",
	"content": "服务目录是为SSP用户提供的最基础的资源服务，下面是配置SSP用户可以访问到的ISO和磁盘镜像模板的方法。\n以SSP管理员用户身份登录。\n点击左侧的 Images ， 在镜像管理页面里，选择 Add Images 按钮，上传可以用于SSP的ISO和Disk镜像。选中其中需要通过服务目录展示给最终用户的镜像。 配置镜像在服务目录中看到的名字和描述。\n点击右侧的 Catalog Items 参考最后发布的效果。\n退出Admin用户，换SSP用户登录。下面是Developer用户角色能看到的内容。\n以上步骤的验收标准： 服务目录里的镜像可以供给SSP用户创建虚拟机。 "
},
{
	"uri": "/03-nucalm-middle/04-lamp-bp/",
	"title": "LAMP技术堆栈蓝图",
	"tags": [],
	"description": "创建带有负载均衡能力的LAMP(/images/服务的蓝图",
	"content": " 这个lab的目标：\n 蓝图使用上面的CentOS7的模板镜像 创建数据库、app、LB服务 设置服务的各种安装包 设置用于应用部署的变量参数  参考蓝图 可以在GitHub下载本文示例蓝图文件，网址：https://github.com/Nutanix-lab/calm，蓝图文件名：LAMP_colo.json。 下面是这个蓝图的关键配置讲解。\n下载上传本蓝图的步骤省略，参考本章前两篇文章。\n蓝图中的重点配置 设置量变量参数，用于参数化这个LAMP模板 * 配置MySQL数据库密码 * 变量 DEMO_COMP 用于初始化 Apache的默认首页的内容，扩展开去，你也可以设置为在Apache/Php服务器上部署的应用的代码的参数，如：下载网址等，这样就可以让这个蓝图自动化的部署目标运行的应用代码。\n 数据库服务器的基础模板选择 martin-centos-t1 这里设定的是不可变 其它的虚拟机规格参数配置如EC2 Demo蓝图，参考上文。   这段脚本是数据库服务的数据安装命令 使用了应用级别的变量初始化MySQL数据库root口令   这段脚本是Apache服务的安装命令 使用了应用级别的变量初始化网站首页的内容，本例中及用于演示的目的 真实场景中，可以是一段动态的拉取应用代码吧的脚本，参数可以是应用的名称、版本和位置等。   Apache服务器在LB负载均衡器的后面，默认两个副本 副本数在部署的时候可选  蓝图的代码 数据库 #!/bin/bash set -ex # -*- Mysql installation #sudo yum install -y \u0026quot;http://repo.mysql.com/mysql-community-release-el7.rpm\u0026quot; sudo yum update -y sudo yum install -y mariadb-server mariadb sudo systemctl start mariadb sudo systemctl enable mariadb # -*- Mysql secure installation mysql -u root\u0026lt;\u0026lt;-EOF UPDATE mysql.user SET Password=PASSWORD('@@{MYSQL_PASSWORD}@@') WHERE User='root'; DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'); DELETE FROM mysql.user WHERE User=''; DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'; FLUSH PRIVILEGES; EOF  应用服务器 #!/bin/bash set -ex # -*- Install httpd and php sudo yum update -y sudo yum install -y httpd php php-mysql echo \u0026quot;\u0026lt;IfModule mod_dir.c\u0026gt; DirectoryIndex index.php index.html index.cgi index.pl index.php index.xhtml index.htm \u0026lt;/IfModule\u0026gt;\u0026quot; | sudo tee /etc/httpd/conf.modules.d/dir.conf echo \u0026quot;\u0026lt;?php phpinfo(); ?\u0026gt;\u0026quot; | sudo tee /var/www/html/info.php echo \u0026quot;\u0026lt;h1\u0026gt; @@{DEMO_COMP}@@ \u0026lt;/h1\u0026gt; \u0026lt;?php echo gethostname(); ?\u0026gt;\u0026quot; | sudo tee /var/www/html/index.html sudo systemctl restart httpd sudo systemctl enable httpd  负载均衡 #!/bin/bash set -ex port=80 sudo yum update -y sudo yum install -y haproxy echo \u0026quot;global log 127.0.0.1 local0 log 127.0.0.1 local1 notice maxconn 4096 quiet user haproxy group haproxy defaults log global mode http retries 3 timeout client 50s timeout connect 5s timeout server 50s option dontlognull option httplog option redispatch balance roundrobin # Set up application listeners here. listen stats 0.0.0.0:8080 mode http log global stats enable stats hide-version stats refresh 30s stats show-node stats uri /stats listen admin bind 127.0.0.1:22002 mode http stats uri / frontend http maxconn 2000 bind 0.0.0.0:80 default_backend servers-http backend servers-http\u0026quot; | sudo tee /etc/haproxy/haproxy.cfg sudo sed -i 's/server host-/#server host-/g' /etc/haproxy/haproxy.cfg hosts=$(echo \u0026quot;@@{APACHE_PHP.address}@@\u0026quot; | sed 's/^,//' | sed 's/,$//' | tr \u0026quot;,\u0026quot; \u0026quot;\\n\u0026quot;) for host in $hosts do echo \u0026quot; server host-${host} ${host}:${port} weight 1 maxconn 100 check\u0026quot; | sudo tee -a /etc/haproxy/haproxy.cfg done sudo systemctl daemon-reload sudo systemctl enable haproxy sudo systemctl restart haproxy  测试和验证 如前文所述Launch这个蓝图，在Service菜单中找到负载均衡HAPROXY服务，点击该服务，找到它的IP地址。\n在Chrome浏览器里转到这个ip地址的访问。\n 这个页面显示的是启动应用是设置的变量 DEMO_COMP  以上步骤的验收标准： 通负载均衡进入的Apache服务器的默认网页上显示的是启动自定义的字段。 "
},
{
	"uri": "/02-nucalm-basic/04-create-template/",
	"title": "创建虚拟机模板",
	"tags": [],
	"description": "创建自定义的虚拟机模板",
	"content": " 通过ISO光盘安装虚拟机 这个步骤是为测试Calm的蓝图做准备，安装一个CentOS 7 的虚拟机，并且把它转化成模板镜像。\n点击 Create VM 按钮，创建一个虚拟机。\n点击 Next 下面输入磁盘信息和CPU内存的配置信息。点 Save 按钮。 进入新创建虚拟机的控制台。\n在安装完的模板虚拟机里运行一下命令，方便后面的蓝图测试，把这些包装好，后面能更快速一些。\nyum install httpd mariadb-server mariadb php php-mysql php-gd nano wget bind-utils net-tools reboot  编辑 /etc/ssh/sshd_config 文件， 取消这一行的注释： PasswordAuthentication yes\n再次登录以后用 sys-unconfig 关机。 以下文档内容参考了 http://lab.digitalformula.net/；\n将测虚拟机磁盘转成模板镜像 ssh登录到AHV Cluster中的一个CVM。登录后执行acli命令，然后输入一下命令\n\u0026lt;acropolis\u0026gt; vm.get centos-tmp include_vmdisk_paths=1 centos-tmp { config { allow_live_migrate: True disk_list { addr { bus: \u0026quot;ide\u0026quot; index: 0 } cdrom: True device_uuid: \u0026quot;1fd10d29-0ac1-425d-99cc-ecffd6593fb2\u0026quot; empty: True } disk_list { addr { bus: \u0026quot;scsi\u0026quot; index: 0 } container_id: 418 container_uuid: \u0026quot;08e01b3e-1bfa-45e0-ba11-5155380e0b1f\u0026quot; device_uuid: \u0026quot;afe6d35e-97a1-4f16-976a-87fd4c702c2e\u0026quot; vmdisk_nfs_path: \u0026quot;/SelfServiceContainer/.acropolis/vmdisk/35ae574b-725f-4ea8-977c-b5c9c42857ca\u0026quot; vmdisk_size: 8589934592 vmdisk_uuid: \u0026quot;35ae574b-725f-4ea8-977c-b5c9c42857ca\u0026quot; } hwclock_timezone: \u0026quot;UTC\u0026quot; machine_type: \u0026quot;pc\u0026quot; max_hotplug_memory_mb: 262144 memory_mb: 2048 name: \u0026quot;centos-tmp\u0026quot; nic_list { mac_addr: \u0026quot;50:6b:8d:79:1d:40\u0026quot; network_name: \u0026quot;Rx-Automation-Network\u0026quot; network_uuid: \u0026quot;ae60a809-d865-4a86-a925-efe062de8084\u0026quot; type: \u0026quot;kNormalNic\u0026quot; uuid: \u0026quot;4b57273d-fc5a-44a6-9791-4bed549c6ae3\u0026quot; vlan_mode: \u0026quot;kAccess\u0026quot; } num_cores_per_vcpu: 1 num_vcpus: 1 power_state_mechanism: \u0026quot;kHard\u0026quot; vga_console: True vm_type: \u0026quot;kGuestVM\u0026quot; } logical_timestamp: 3 state: \u0026quot;kOff\u0026quot; uuid: \u0026quot;336672c6-e4b9-4cfa-b8b3-392e66257fd8\u0026quot; } \u0026lt;acropolis\u0026gt;  使用以上命令得到测试模板机的磁盘文件的路径： vmdisk_nfs_path: \u0026quot;/SelfServiceContainer/.acropolis/vmdisk/35ae574b-725f-4ea8-977c-b5c9c42857ca\u0026quot;\n用 exit 命令退出 acli 命令行。退出 CVM 的SSH会话。\n使用SSH登录PC虚拟机 ssh nutanix@\u0026lt;pc_vm_ip_address\u0026gt;，之后运行nuclei命令行。\nimage.create name=CentOS7-Template1 image_type=DISK_IMAGE source_uri=nfs://10.21.11.37/SelfServiceContainer/.acropolis/vmdisk/35ae574b-725f-4ea8-977c-b5c9c42857ca   Image name: CentOS7-Template 这是自己起的镜像名称 CVM IP address: 10.21.11.37 这是AHV群集的Cluster IP vmdisk_nfs_path: /NTNX-Container/.acropolis/vmdisk/295b45d0-b8ba–4d52–97ef–54cc5b885af7 这个是acli的输出结果。  以上命令执行成功以后，在命令行里确认一下：\n\u0026lt;nuclei\u0026gt; image.list Name UUID State CentOS-7-1406-x86_64-DVD.iso 9236e75f-72f4-4e31-be29-a305159a8ac5 COMPLETE CentOS7-Template 679178b9-c482-4c30-933b-ed50ab03cb48 COMPLETE CentOSv2 eae6627d-1d34-4d30-9c8a-13ca546c444a COMPLETE Virt IO 8bfa2ebe-6c3b-4a4f-a024-6655f05625fd COMPLETE Windows2012-disk1 829ec164-ff39-4b79-a901-541e19fc3e2b COMPLETE server_2012_r2 fa95afb2-4f67-4748-a595-b3e8e4260fb5 COMPLETE \u0026lt;nuclei\u0026gt;  然后登陆到PC里面在网页上确认一下。如下图所示。\n以上步骤的验收标准： PC中可以看到这个镜像，可以将这个镜像加入服务目录中。 "
},
{
	"uri": "/01-prism-central/",
	"title": "Prism Central",
	"tags": [],
	"description": "PC的基础配置和部署",
	"content": "PC的部署需求：\n AHV群集已经安装部署完毕 AD的用户和组就绪 AHV的初始化配置完成 下载一键式的PC安装包  本文使用的一键式PC安装包如下所示：\n 5.5-prism_central.tar 5.5-prism_central_metadata.json   部署Prism Central 部署PC的安装包\n 配置Prism Central 完成PC的基础配置\n "
},
{
	"uri": "/02-nucalm-basic/",
	"title": "Nutnaix Calm基础功能",
	"tags": [],
	"description": "Nutanix Calm环境的基本配置和基础功能",
	"content": "  初始化配置Calm Calm环境的基础配置\n 导入Nutanix Calm商店里的蓝图 Calm里应用商店的初始化配置\n 配置服务目录 在自助服务的门户里，可以选择ISO和磁盘镜像\n 创建虚拟机模板 创建自定义的虚拟机模板\n "
},
{
	"uri": "/03-nucalm-middle/",
	"title": "Nutnaix Calm中级功能",
	"tags": [],
	"description": "Nutanix Calm蓝图管理从简单到复杂",
	"content": "  HelloWorld蓝图 创建一个最简单的蓝图\n 三层LAMP应用蓝图 基于LAMP技术堆栈的典型三层应用\n 模拟AWS EC2蓝图 创建一个模拟AWS EC2服务的蓝图\n LAMP技术堆栈蓝图 创建带有负载均衡能力的LAMP(/images/服务的蓝图\n "
},
{
	"uri": "/",
	"title": "Nutanix实验室",
	"tags": [],
	"description": "技术文档和操作手册",
	"content": " Nutanix实验室 本站点包含了Nutnaix Calm的一部分产品操作指南，旨在帮助相关人员快速了解和掌握产品的使用方式。\n Nutanix全球用户支持门户   Nutanix圣经 Nutanix中国官方微信公众号 ： Nutnaix-China  变更日志  2018-1-22：增加了EC2服务高仿蓝图和LAMP堆栈自定义应用部署蓝图。  Calm 简介 IT团队一直想方设法地整体提升IT的敏捷性，从而加速创新的步伐。然而，应用的开发和交付也在变得日益复杂，这使敏捷性更具有挑战性。部门墙增加了跨专业技术沟通的成本，削弱了实现业务价值的能力。\nCalm提供企业级应用编排，变革了IT团队管理应用和支持业务的工作模式。完全整合在Nutanix管理平台中的Calm，可以提供一个强大的通用型应用交付框架。不同的IT团队可以同时在这个平台上协作，进行快速的应用部署和持续交付。\nCalm将应用看做是一个整体来管理，而不仅是一些虚拟机，实现了应用的自动化创建、消费和访问控制。Calm能统一管理私有云和公有云等环境，实现了简洁的、可重复的应用自动化管理。\n如上图所示，Calm包含在Prism管理控制平面中，基于Prism中简洁高效的一键式运维，它协助企业从虚拟化资源池的运维，提升到以业务为中心的自动化应用运维。\n下图是Calm的可视化应用蓝图编辑器，它的主要功能如下所示：\n 应用生命周期管理：利用预定义的应用蓝图，全面地实现了传统型多层应用和流行的分布式服务的自动化运维，包括系统制备、扩缩容和资源释放等操作。应用蓝图将极大地简化了私有云和公有云的应用管理和运维。\n 应用蓝图管理：将应用系统的所有组成部分（包括相关的虚拟机、配置和可执行程序）融入到了一个可视化的、操作直观的蓝图里，从而简化了企业应用的配置管理和日常运维。应用蓝图提升了基础架构团队的管理效率。IT团队再也不用像以前那样，在应用管理的日常工作上花费大量时间。\n Nutanix应用市场：应用蓝图可以在Nutanix 应用市场（Marketplace）里把应用直接发布给最终用户，使产品经理和开发人员能够持续交付产品，快速地供给应用，及时地满足IT服务请求。\n 应用治理：Calm基于角色的访问控制机制可以限制用户的操作权限。此外，系统会集中地记录所有操作活动和变更，可以实现端到端的可追溯性，这些信息可以提供给安全团队，用来配合相关合规审核工作。\n 混合云管理：能在混合云的架构里，自动化地制备应用，包括AWS公有云环境，能实现多层应用和分布式应用的弹性扩缩容。Calm能全局统计资源用量，让您对公有云的实际消费成本一目了然，方便您按照业需求和预算做出合理的决策。\n  术语 本网站里所使用的术语和缩略语：\n PC ： Prisum Central PE ： Prisum Element  向本网站投稿 欢迎投稿关于Nutnaix产品的技术文章。\n请发邮件到： martin.liu@nutanix.com 本网站的Web站点 这个站点使用了Hugo静态网站生成器加DocDock模板。所有源代码在Nutanix-lab/lab-guide  ；你可以下载到本地并参与修订。\n"
},
{
	"uri": "/_footer/",
	"title": "footer",
	"tags": [],
	"description": "",
	"content": "页脚说明\n"
},
{
	"uri": "/_header/",
	"title": "header",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/credits/",
	"title": "Credits",
	"tags": [],
	"description": "contributors and packages used by hugo-theme-docdock",
	"content": " Github contributors *\n"
},
{
	"uri": "/showcase/",
	"title": "Nutanix技术粉丝的展示厅",
	"tags": [],
	"description": "Hugo-built Sites with docdock theme",
	"content": " 提交您的网站链接给我，发邮件到 martin.liu@nutanix.com\nhttps://invincible.site/ 这是里应该是你的名字和网址链接 @shazic https://bitfan.io/ 这是里应该是你的名字和网址链接@vjeantet "
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/01-prism-central/00-deploy-pc/",
	"title": "部署Prism Central",
	"tags": [],
	"description": "部署PC的安装包",
	"content": "在AHV群集的管理界面PE里，点击左上角的第一个方格里的链接 “Register or create new”，在弹出的界面里，点击界面下部的上传安装包的选项，选择如下的两个文件，上传的界面如下所示。\n上传的文件为：\n 5.5-prism_central.tar 5.5-prism_central_metadata.json  上传完毕之后点击安装按钮\n输入PC虚拟机的相关信息，如下图所示：\n注意可以勾选最下面的那个选项，把PC安装配置好之后一次性的把当前所操作的PE也一次性注册到PC中。 点击上图的部署按钮之后，大约需要半个小时的时间完成整个安装配置过程。\n在部署和配置PC的过程中，可以监控以下这两个任务的进度。\n安装部署完毕之后，在PE的界面中就可以看到PC的状态为OK。点击Launch链接。进入PC的登录界面，默认的用户名和密码是 admin / Nutanix/4u\n以上步骤的验收标准： 使用PC的默认用户名和密码成功登陆新安装的PC。 "
},
{
	"uri": "/01-prism-central/01-configure-pc/",
	"title": "配置Prism Central",
	"tags": [],
	"description": "完成PC的基础配置",
	"content": "用新修改的admin密码登录之后，点击右上角的问号按钮。点击下面的Self Service \u0026amp; Apps链接，进入SSP的初始化配置界面。\n点击界面上的New Directory 按钮，配置和AD的集成。\n在配置页面里输入AD的项目信息，下面的AD的域名为zenlab.local；点击Next按钮。 进入SSP管理员配置页面，点击 Add Admins 按钮。\n在输入框里输入 ssp_a 即可自动搜索出之前创建的SSP管理员组。也可以使用已经由的AD用户和组，点击 Save。\n在网络配置里勾选默认群集中供SSP用户使用的网络。之后点击 Next 。\n在最后一个页面中勾选 Enable App Management ，点击 Finish 完成SSP的配置和App功能的启用。 以上配置的生效需要一个过程，大约需要十分钟左右的时间，可以在任务里观察这个任务的状态。\n以上步骤的验收标准： 上图中Enable App Management的100%成功完成。 "
}]